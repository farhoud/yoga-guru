{
  "id": "d0b4c951-f9b2-45c0-8bc9-7f1b1a4ea25c",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.attendance": {
      "name": "attendance",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "session_enrollment_id": {
          "name": "session_enrollment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "attended": {
          "name": "attended",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "check_in_time": {
          "name": "check_in_time",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "checked_in_by": {
          "name": "checked_in_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "attendance_session_enrollment_id_session_enrollments_id_fk": {
          "name": "attendance_session_enrollment_id_session_enrollments_id_fk",
          "tableFrom": "attendance",
          "tableTo": "session_enrollments",
          "columnsFrom": [
            "session_enrollment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "attendance_checked_in_by_profiles_id_fk": {
          "name": "attendance_checked_in_by_profiles_id_fk",
          "tableFrom": "attendance",
          "tableTo": "profiles",
          "columnsFrom": [
            "checked_in_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_attendance_constraint": {
          "name": "unique_attendance_constraint",
          "nullsNotDistinct": false,
          "columns": [
            "session_enrollment_id"
          ]
        }
      },
      "policies": {
        "select_own_attendance": {
          "name": "select_own_attendance",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = (SELECT user_id FROM session_enrollments se WHERE se.id = \"attendance\".\"session_enrollment_id\")"
        },
        "mark_attendance": {
          "name": "mark_attendance",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\n          (SELECT is_instructor FROM profiles WHERE id = (select auth.uid())) = TRUE\n          AND (select auth.uid()) = (\n            SELECT cs.instructor_id\n            FROM session_enrollments se\n            JOIN class_sessions cs ON se.session_id = cs.id\n            WHERE se.id = \"attendance\".\"session_enrollment_id\"\n          )\n        "
        },
        "update_attendance": {
          "name": "update_attendance",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\n          (SELECT is_instructor FROM profiles WHERE id = (select auth.uid())) = TRUE\n          AND (select auth.uid()) = (\n            SELECT cs.instructor_id\n            FROM session_enrollments se\n            JOIN class_sessions cs ON se.session_id = cs.id\n            WHERE se.id = \"attendance\".\"session_enrollment_id\"\n          )\n        ",
          "withCheck": "\n          (SELECT is_instructor FROM profiles WHERE id = (select auth.uid())) = TRUE\n          AND (select auth.uid()) = (\n            SELECT cs.instructor_id\n            FROM session_enrollments se\n            JOIN class_sessions cs ON se.session_id = cs.id\n            WHERE se.id = \"attendance\".\"session_enrollment_id\"\n          )\n        "
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.class_sessions": {
      "name": "class_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "class_id": {
          "name": "class_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "session_date": {
          "name": "session_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "start_time": {
          "name": "start_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "end_time": {
          "name": "end_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "max_capacity": {
          "name": "max_capacity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 20
        },
        "instructor_id": {
          "name": "instructor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "is_cancelled": {
          "name": "is_cancelled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "class_sessions_class_id_classes_id_fk": {
          "name": "class_sessions_class_id_classes_id_fk",
          "tableFrom": "class_sessions",
          "tableTo": "classes",
          "columnsFrom": [
            "class_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "class_sessions_instructor_id_profiles_id_fk": {
          "name": "class_sessions_instructor_id_profiles_id_fk",
          "tableFrom": "class_sessions",
          "tableTo": "profiles",
          "columnsFrom": [
            "instructor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_session_constraint": {
          "name": "unique_session_constraint",
          "nullsNotDistinct": false,
          "columns": [
            "class_id",
            "session_date",
            "start_time"
          ]
        }
      },
      "policies": {
        "view_all_sessions": {
          "name": "view_all_sessions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.classes": {
      "name": "classes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price_per_session": {
          "name": "price_per_session",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "instructor_id": {
          "name": "instructor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "classes_instructor_id_profiles_id_fk": {
          "name": "classes_instructor_id_profiles_id_fk",
          "tableFrom": "classes",
          "tableTo": "profiles",
          "columnsFrom": [
            "instructor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "view_all_classes": {
          "name": "view_all_classes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "manage_own_classes": {
          "name": "manage_own_classes",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"classes\".\"instructor_id\" AND (SELECT is_instructor FROM profiles WHERE id = (select auth.uid())) = TRUE",
          "withCheck": "(select auth.uid()) = \"classes\".\"instructor_id\" AND (SELECT is_instructor FROM profiles WHERE id = (select auth.uid())) = TRUE"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.memberships": {
      "name": "memberships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "class_id": {
          "name": "class_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "payment_status": {
          "name": "payment_status",
          "type": "payment_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "amount_paid": {
          "name": "amount_paid",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "transaction_id": {
          "name": "transaction_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "memberships_user_id_profiles_id_fk": {
          "name": "memberships_user_id_profiles_id_fk",
          "tableFrom": "memberships",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memberships_class_id_classes_id_fk": {
          "name": "memberships_class_id_classes_id_fk",
          "tableFrom": "memberships",
          "tableTo": "classes",
          "columnsFrom": [
            "class_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_membership_constraint": {
          "name": "unique_membership_constraint",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "class_id",
            "start_date",
            "end_date"
          ]
        }
      },
      "policies": {
        "select_own_membership": {
          "name": "select_own_membership",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"memberships\".\"user_id\""
        },
        "insert_own_membership": {
          "name": "insert_own_membership",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"memberships\".\"user_id\""
        },
        "update_own_membership": {
          "name": "update_own_membership",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"memberships\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"memberships\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_instructor": {
          "name": "is_instructor",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_id_users_id_fk": {
          "name": "profiles_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select_own_profile": {
          "name": "select_own_profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"id\""
        },
        "update_own_profile": {
          "name": "update_own_profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"id\"",
          "withCheck": "(select auth.uid()) = \"profiles\".\"id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.recurring_patterns": {
      "name": "recurring_patterns",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "class_id": {
          "name": "class_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "day_of_week": {
          "name": "day_of_week",
          "type": "day_of_week",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "start_time": {
          "name": "start_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "duration_minutes": {
          "name": "duration_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "effective_from_date": {
          "name": "effective_from_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "effective_to_date": {
          "name": "effective_to_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "recurring_patterns_class_id_classes_id_fk": {
          "name": "recurring_patterns_class_id_classes_id_fk",
          "tableFrom": "recurring_patterns",
          "tableTo": "classes",
          "columnsFrom": [
            "class_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session_enrollments": {
      "name": "session_enrollments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "membership_id": {
          "name": "membership_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enrollment_date": {
          "name": "enrollment_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "status": {
          "name": "status",
          "type": "enrollment_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'enrolled'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_enrollments_user_id_profiles_id_fk": {
          "name": "session_enrollments_user_id_profiles_id_fk",
          "tableFrom": "session_enrollments",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "session_enrollments_session_id_class_sessions_id_fk": {
          "name": "session_enrollments_session_id_class_sessions_id_fk",
          "tableFrom": "session_enrollments",
          "tableTo": "class_sessions",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "session_enrollments_membership_id_memberships_id_fk": {
          "name": "session_enrollments_membership_id_memberships_id_fk",
          "tableFrom": "session_enrollments",
          "tableTo": "memberships",
          "columnsFrom": [
            "membership_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_enrollment_constraint": {
          "name": "unique_enrollment_constraint",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "session_id"
          ]
        }
      },
      "policies": {
        "select_own_enrollment": {
          "name": "select_own_enrollment",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"session_enrollments\".\"user_id\""
        },
        "insert_own_enrollment": {
          "name": "insert_own_enrollment",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"session_enrollments\".\"user_id\" AND EXISTS (\n          SELECT 1 FROM memberships m\n          WHERE m.id = \"session_enrollments\".\"membership_id\"\n            AND m.user_id = (select auth.uid())\n            AND m.class_id = (SELECT class_id FROM class_sessions cs WHERE cs.id = \"session_enrollments\".\"session_id\")\n            AND m.start_date <= (SELECT session_date FROM class_sessions cs WHERE cs.id = \"session_enrollments\".\"session_id\")\n            AND m.end_date >= (SELECT session_date FROM class_sessions cs WHERE cs.id = \"session_enrollments\".\"session_id\")\n            AND m.payment_status = 'paid'\n        )"
        },
        "update_own_enrollment": {
          "name": "update_own_enrollment",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"session_enrollments\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"session_enrollments\".\"user_id\""
        },
        "delete_own_enrollment": {
          "name": "delete_own_enrollment",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"session_enrollments\".\"user_id\" AND \"session_enrollments\".\"status\" IN ('enrolled', 'waitlisted')"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.day_of_week": {
      "name": "day_of_week",
      "schema": "public",
      "values": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ]
    },
    "public.enrollment_status": {
      "name": "enrollment_status",
      "schema": "public",
      "values": [
        "enrolled",
        "waitlisted",
        "cancelled",
        "no_show"
      ]
    },
    "public.payment_status": {
      "name": "payment_status",
      "schema": "public",
      "values": [
        "pending",
        "paid",
        "failed",
        "refunded"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}